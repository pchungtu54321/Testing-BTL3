# Generated by Selenium IDE
import os 

import openpyxl
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from selenium.common.exceptions import NoSuchElementException


class FileExcelReader:
    file = ""
    sheetName = ""

    def __init__(self, file, sheetName):
        self.file = file
        self.sheetName = sheetName

    def getRowCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_row)

    def getColumnCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_column)

    def readData(self, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return sheet.cell(row=rownum, column=colnum).value

    def writeData(self, data, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        sheet.cell(row=rownum, column=colnum).value = data
        wordbook.save(self.file)

class TestUpdateQuiz():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()
        self.vars = {}
    
    def teardown_method(self):
        self.driver.quit()

    def first_step(self):
        self.driver.get('https://sso.hcmut.edu.vn/cas/login?service=https%3A%2F%2Flms.hcmut.edu.vn%2Flogin%2Findex.php%3FauthCAS%3DCAS')
        time.sleep(2)
        
        self.driver.find_element(By.NAME,"username").send_keys("010552")
        self.driver.find_element(By.NAME,"password").send_keys("010552")
        self.driver.find_element(By.NAME,"submit").click()
        time.sleep(2)

        # Go to link for create new quizz
        self.driver.get('https://lms.hcmut.edu.vn/course/modedit.php?add=quiz&type&course=48411&section=3&return=0&sr=0&beforemod=0')
        time.sleep(1)

        #Expand all
        self.driver.find_element(By.CLASS_NAME, 'collapseexpand').click()
        time.sleep(3)

    def test_updateQuiz(self, name, open, close, limit, expectedResult):
        self.first_step()
        self.driver.execute_script(f"arguments[0].setAttribute('value', '{name}')", self.driver.find_element(By.ID, 'id_name'))
        time.sleep(1)

        if (open != ""):
            self.driver.find_element(By.ID, 'id_timeopen_enabled').click()
            time.sleep(2)

        if (close != ""):
            self.driver.find_element(By.ID, 'id_timeclose_enabled').click()
            time.sleep(2)

        if (open != "" and close != ""):
            self.driver.find_element(By.XPATH, f'//*[@id="id_timeopen_year"]/option[text()="{open}"]').click()
            time.sleep(2)
            self.driver.find_element(By.XPATH, f'//*[@id="id_timeclose_year"]/option[text()="{close}"]').click()
            time.sleep(2)

        
        if (limit != ""):
            self.driver.find_element(By.ID, 'id_timelimit_enabled').click()
            time.sleep(2)

            self.driver.execute_script(f"arguments[0].setAttribute('value','{limit}')", self.driver.find_element(By.ID, 'id_timelimit_number'))
            time.sleep(2)


        self.driver.find_element(By.ID,"id_submitbutton2").click()
        time.sleep(5)

        if expectedResult == "SaveSucess":
            elements = self.driver.find_elements(By.CLASS_NAME, 'activityname')
            for item in elements:
                if name in item.get_attribute("outerText"):
                    assert item.is_displayed()
        
        elif expectedResult == "MissingName":
            self.driver.find_element(By.ID,'id_error_name')

        elif expectedResult == "InvalidOpen":
            self.driver.find_element(By.ID,'id_error_timeclose')
          
        elif expectedResult == "InvalidClose":
            self.driver.find_element(By.ID,'id_error_timeclose')

        elif expectedResult == "InvalidLimit":
            self.driver.find_element(By.ID,'id_error_timelimit')
        

        time.sleep(1)
        self.driver.get('https://lms.hcmut.edu.vn/login/logout.php?sesskey=NyUKwbW7f1')
        time.sleep(1)
        self.driver.find_element(By.XPATH, "//button[text()='Continue']").click()
        time.sleep(1)



if __name__ == "__main__":
    directory = r"Data_Driven\updateQuiz"
    path = os.path.join(os.getcwd(), directory) 
    os.chdir(path)
    
    excel = FileExcelReader('SecB_updatequiz_data.xlsx', 'Sheet1')
    test = TestUpdateQuiz()
    
    test.setup_method()

    nRows = excel.getRowCount()
    for row in range(2, nRows + 1):
        name = excel.readData(row,2)
        open = excel.readData(row,3)
        close = excel.readData(row,4)
        limit = excel.readData(row,5)
        expectedResult = excel.readData(row,6)
       
        if name is None:
            name = ""
        if open is None:
            open = ""
        if close is None:
            close = ""
        if limit is None:
            limit = ""

        try:
            result = test.test_updateQuiz(name, open, close, limit, expectedResult)
            excel.writeData("Passed",row,7)
        except:
            print(result)
            excel.writeData("Failed",row,7)

    test.teardown_method()