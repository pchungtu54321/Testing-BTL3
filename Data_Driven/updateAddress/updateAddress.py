# Generated by Selenium IDE
import openpyxl
import time

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from selenium.common.exceptions import NoSuchElementException


class FileExcelReader:
    file = ""
    sheetName = ""

    def __init__(self, file, sheetName):
        self.file = file
        self.sheetName = sheetName

    def getRowCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_row)

    def getColumnCount(self):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return (sheet.max_column)

    def readData(self, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        return sheet.cell(row=rownum, column=colnum).value

    def writeData(self, data, rownum, colnum):
        wordbook = openpyxl.load_workbook(self.file)
        sheet = wordbook[self.sheetName]
        sheet.cell(row=rownum, column=colnum).value = data
        wordbook.save(self.file)


class TestUpdateID():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def first_step(self):
        self.driver.get('https://mybk.hcmut.edu.vn/stinfo/logout')
        self.driver.get(
            'https://sso.hcmut.edu.vn/cas/login?service=http%3A%2F%2Fmybk.hcmut.edu.vn%2Fstinfo%2F')

        self.driver.find_element(
            By.NAME, "username").send_keys("tan.lamcs1001")
        self.driver.find_element(By.NAME, "password").send_keys("lnt@H1720")
        self.driver.find_element(By.NAME, "submit").click()
        time.sleep(1)

    def test_update_address(self, nationalityId, placeOfBirthId, religionId, ethnicityId, priorityAreaId, 
                            priorityObjectId, youthUnionJoinDate, householdProvinceCityId, householdDistrictId,
                            householdNumber,
                            fatherName, fatherYearOfBirth, fatherJob, motherName, motherYearOfBirth, motherJob):
        self.driver.get("https://mybk.hcmut.edu.vn/app/he-thong-quan-ly-hoc-vu/quan-ly-sinh-vien/cap-nhat-ho-so-sinh-vien/181730")
        time.sleep(3)
        change = False
        
        # nationality
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-nationalityId-container"]').text.replace('×\n', '')
        if original != nationalityId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-nationalityId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(nationalityId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # birth place
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-placeOfBirthId-container"]').text.replace('×\n', '')
        if original != placeOfBirthId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-placeOfBirthId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(placeOfBirthId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
        
        # religion
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-religionId-container"]').text.replace('×\n', '')
        if original != religionId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-religionId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(religionId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # ethic
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-ethnicityId-container"]').text.replace('×\n', '')
        if original != ethnicityId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-ethnicityId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(ethnicityId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
            
            
        # priorityAreaId
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-priorityAreaId-container"]').text.replace('×\n', '')
        if original != priorityAreaId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-priorityAreaId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(priorityAreaId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # priorityObjectId
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-priorityObjectId-container"]').text.replace('×\n', '')
        if original != priorityObjectId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-priorityObjectId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(priorityObjectId.split(' ')[-1])
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
        
        # youthUnionJoinDate
        original = self.driver.find_element(By.ID, 'youthUnionJoinDate').get_attribute("value")
        if original != youthUnionJoinDate: 
            change = True
            inp = self.driver.find_element(By.ID, 'youthUnionJoinDate')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(youthUnionJoinDate)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
        
        # householdProvinceCityId
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-householdProvinceCityId-container"]').text.replace('×\n', '')
        if original != householdProvinceCityId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-householdProvinceCityId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(householdProvinceCityId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # householdDistrictId
        original = self.driver.find_element(By.XPATH, '//*[@id="select2-householdDistrictId-container"]').text.replace('×\n', '')
        if original != householdDistrictId: 
            change = True
            self.driver.find_element(By.XPATH, '//*[@id="select2-householdDistrictId-container"]').click()
            time.sleep(1)
            add_new = self.driver.find_element(By.XPATH, '/html/body/span/span/span[1]/input')
            add_new.send_keys(householdDistrictId)
            add_new.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # householdNumber
        original = self.driver.find_element(By.XPATH, '//*[@id="householdNumber"]').get_attribute("value")
        if original != householdNumber: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="householdNumber"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(householdNumber)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
            
        # fatherName
        original = self.driver.find_element(By.XPATH, '//*[@id="fatherName"]').get_attribute("value")
        if original != fatherName: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="fatherName"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(fatherName)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # fatherYearOfBirth
        original = self.driver.find_element(By.XPATH, '//*[@id="fatherYearOfBirth"]').get_attribute("value")
        if original != fatherYearOfBirth: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="fatherYearOfBirth"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(fatherYearOfBirth)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # fatherJob
        original = self.driver.find_element(By.XPATH, '//*[@id="fatherJob"]').get_attribute("value")
        if original != fatherJob: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="fatherJob"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(fatherJob)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # motherName
        original = self.driver.find_element(By.XPATH, '//*[@id="motherName"]').get_attribute("value")
        if original != motherName: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="motherName"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(motherName)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # motherYearOfBirth
        original = self.driver.find_element(By.XPATH, '//*[@id="motherYearOfBirth"]').get_attribute("value")
        if original != motherYearOfBirth: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="motherYearOfBirth"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(motherYearOfBirth)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
        # motherJob
        original = self.driver.find_element(By.XPATH, '//*[@id="motherJob"]').get_attribute("value")
        if original != motherJob: 
            change = True
            inp = self.driver.find_element(By.XPATH, '//*[@id="motherJob"]')
            inp.send_keys(Keys.CONTROL + "a")
            inp.send_keys(Keys.DELETE)
            inp.send_keys(motherJob)
            inp.send_keys(Keys.ENTER)
            time.sleep(1)
            
        
        # click update
        self.driver.find_element(By.XPATH, '//*[@id="frmStudentProfile"]/div[10]/div/button').click()
        time.sleep(2)
        
        
        if change:
            self.driver.find_element(By.XPATH, '/html/body/div[3]/div/div[3]/button[1]').click()
            time.sleep(2)

            annoucetext = self.driver.find_element(By.XPATH, '/html/body/div[3]/div/div[1]/h2').text
            return annoucetext == "Cập nhật hồ sơ sinh viên thành công"
        else: 
            annoucetext = self.driver.find_element(By.XPATH, '/html/body/div[3]/div/div[1]/h2').text
            
            return annoucetext == "Vui lòng thay đổi thông tin nếu muốn cập nhật"
                
                
            


if __name__ == "__main__":
    excel = FileExcelReader(
        './Data_Driven/updateAddress/update_address.xlsx', "Sheet1")
    test = TestUpdateID()
    test.setup_method()
    test.first_step()
    
    nRows = excel.getRowCount()
    for row in range(2, nRows + 1):
        
        nationalityId = excel.readData(row, 1)
        placeOfBirthId = excel.readData(row, 2)
        religionId = excel.readData(row, 3)
        ethnicityId = excel.readData(row, 4)
        priorityAreaId = excel.readData(row, 5)
        priorityObjectId = excel.readData(row, 6)
        youthUnionJoinDate = excel.readData(row, 7)
        householdProvinceCityId = excel.readData(row, 8)
        householdDistrictId = excel.readData(row, 9)
        householdNumber = excel.readData(row, 10)
        fatherName = excel.readData(row, 11)
        fatherYearOfBirth = excel.readData(row, 12)
        fatherJob = excel.readData(row, 13)
        motherName = excel.readData(row, 14)
        motherYearOfBirth = excel.readData(row, 15)
        motherJob = excel.readData(row, 16)
        
        if nationalityId is None:
            nationalityId = ""

        if placeOfBirthId is None:
            placeOfBirthId = ""

        if religionId is None:
            religionId = ""

        if ethnicityId is None:
            ethnicityId = ""

        if priorityAreaId is None:
            priorityAreaId = ""

        if priorityObjectId is None:
            priorityObjectId = ""

        if youthUnionJoinDate is None:
            youthUnionJoinDate = ""

        if householdProvinceCityId is None:
            householdProvinceCityId = ""

        if householdDistrictId is None:
            householdDistrictId = ""

        if householdNumber is None:
            householdNumber = ""


        if fatherName is None:
            fatherName = ""

        if fatherYearOfBirth is None:
            fatherYearOfBirth = ""

        if fatherJob is None:
            fatherJob = ""

        if motherName is None:
            motherName = ""

        if motherYearOfBirth is None:
            motherYearOfBirth = ""

        if motherJob is None:
            motherJob = ""

        # print(nRows)
        try:
            result = test.test_update_address(nationalityId, placeOfBirthId, religionId, ethnicityId, priorityAreaId, 
                                                priorityObjectId, youthUnionJoinDate, householdProvinceCityId, householdDistrictId,
                                                householdNumber, 
                                                fatherName, fatherYearOfBirth, fatherJob, motherName, motherYearOfBirth, motherJob)
            if result:
                excel.writeData("Passed", row, 17)
            else:
                excel.writeData("Failed", row, 17)
        except Exception as e:
            excel.writeData("Error", row, 17)
            print(e)

   
    test.teardown_method()
